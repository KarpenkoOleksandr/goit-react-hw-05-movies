{"version":3,"file":"static/js/736.d9d95c3d.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 24px;    \n`\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px; \n  max-width: 200px;\n`","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchActors } from \"services/Api\";\nimport Loader from \"components/Loader/Loader\";\nimport { List, Text } from \"./Cast.styled\";\n\nexport default function Cast () {\n    const { movieId } = useParams();\n    const [actors, setActors] = useState([]);\n    const [loading, setLoadig] = useState(false);\n\n    useEffect(() => {\n        const onActorsOfMovie = () => {\n            setLoadig(true);\n\n            fetchActors(movieId).then(actors => { setActors(actors); }).catch(error => { console.log(error); }).finally(() => { setLoadig(false); });\n        };\n        onActorsOfMovie();\n    }, [movieId]);\n\n    return (\n        <div>\n            {loading && <Loader />}\n            <List>\n                {actors.map(({ id, profile_path, original_name, name, character }) => (\n                    <li key={id}>\n                        <img width=\"200px\" src={profile_path\n                            ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                            : `https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700`} alt={original_name} />\n                        <Text>{name}</Text>\n                        <Text>Character: {character}</Text>\n                 </li>   \n                ))}\n            </List>\n        </div>\n    )\n}","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c8f39373aa3f9e58d9844c0d233508c8';\n\nexport const fetchTrending = async() => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}&language=en-US`);\n    return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoadig","useEffect","fetchActors","then","catch","error","console","log","finally","_jsxs","children","_jsx","Loader","map","_ref","id","profile_path","original_name","name","character","width","src","concat","alt","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
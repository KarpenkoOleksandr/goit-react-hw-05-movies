{"version":3,"file":"static/js/278.f1073348.chunk.js","mappings":"mNAGaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gBAIhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gBAIhBG,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gB,SCRtB,SAASM,EAAUC,GAAc,IAAVC,EAAKD,EAALC,MAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACIC,EAAAA,EAAAA,KAACd,EAAI,CAAAe,SACAJ,EAAMK,KAAI,SAAAC,GAAI,OACXH,EAAAA,EAAAA,KAACV,EAAI,CAACc,IAAKD,EAAKE,GAAGJ,UACfD,EAAAA,EAAAA,KAACR,EAAS,CAACc,GAAE,WAAAC,OAAaJ,EAAKE,IAAMG,MAAO,CAAEC,KAAMX,GAAWG,SAC1DE,EAAKO,SAEP,KAIvB,C,oICXaC,EAAS,WAClB,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAwCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAiBpC,OACIG,EAAAA,EAAAA,MAAA,QAAAzB,SAAA,EACID,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACC,aAjBO,SAAAC,GACjBR,GAAW,IAEbS,EAAAA,EAAAA,IAAqBD,GAClBE,MAAK,SAAAC,GACJf,EAAee,GACbP,EAAyC,IAAzBO,EAAcC,OAClC,IACCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACd,IACCG,SAAQ,WACPjB,GAAW,EACb,GACJ,IAISD,IAAWpB,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,IAClBf,IAAiBxB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4DACpBe,IAAehB,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,MAAOmB,MAG/C,C,+LChCAwB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAa,eAAA9C,GAAA+C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFT,EAAAA,EAAAA,IAAU,8BAADjC,OAA+BkC,EAAO,oBAAmB,KAAD,EAA1E,OAARK,EAAQC,EAAAG,KAAAH,EAAAI,OAAA,SACPL,EAASM,KAAKC,SAAO,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,KAC/B,kBAHyB,OAAAjD,EAAA2D,MAAA,KAAAC,UAAA,KAKb1B,EAAoB,eAAA2B,GAAAd,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAc,EAAMC,GAAO,IAAAb,EAAA,OAAAF,IAAAA,MAAA,SAAAgB,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACtBT,EAAAA,EAAAA,IAAU,wBAADjC,OAAyBkC,EAAO,qDAAAlC,OAAoDoD,IAAW,KAAD,EAAhH,OAARb,EAAQc,EAAAV,KAAAU,EAAAT,OAAA,SACPL,EAASM,KAAKC,SAAO,wBAAAO,EAAAN,OAAA,GAAAI,EAAA,KAC/B,gBAHgCG,GAAA,OAAAJ,EAAAF,MAAA,KAAAC,UAAA,KAKpBM,EAAiB,eAAAC,GAAApB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoB,EAAMC,GAAO,IAAAnB,EAAA,OAAAF,IAAAA,MAAA,SAAAsB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACnBT,EAAAA,EAAAA,IAAU,SAADjC,OAAU0D,EAAO,aAAA1D,OAAYkC,EAAO,oBAAmB,KAAD,EAAxE,OAARK,EAAQoB,EAAAhB,KAAAgB,EAAAf,OAAA,SACPL,EAASM,MAAI,wBAAAc,EAAAZ,OAAA,GAAAU,EAAA,KACvB,gBAH6BG,GAAA,OAAAJ,EAAAR,MAAA,KAAAC,UAAA,KAKjBY,EAAW,eAAAC,GAAA1B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0B,EAAML,GAAO,IAAAnB,EAAA,OAAAF,IAAAA,MAAA,SAAA2B,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACbT,EAAAA,EAAAA,IAAU,SAADjC,OAAU0D,EAAO,qBAAA1D,OAAoBkC,EAAO,oBAAmB,KAAD,EAAhF,OAARK,EAAQyB,EAAArB,KAAAqB,EAAApB,OAAA,SACPL,EAASM,KAAKoB,MAAI,wBAAAD,EAAAjB,OAAA,GAAAgB,EAAA,KAC5B,gBAHuBG,GAAA,OAAAJ,EAAAd,MAAA,KAAAC,UAAA,KAKXkB,EAAY,eAAAC,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgC,EAAMX,GAAO,IAAAnB,EAAA,OAAAF,IAAAA,MAAA,SAAAiC,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACdT,EAAAA,EAAAA,IAAU,SAADjC,OAAU0D,EAAO,qBAAA1D,OAAoBkC,EAAO,2BAA0B,KAAD,EAAvF,OAARK,EAAQ+B,EAAA3B,KAAA2B,EAAA1B,OAAA,SACPL,EAASM,KAAKC,SAAO,wBAAAwB,EAAAvB,OAAA,GAAAsB,EAAA,KAC/B,gBAHwBE,GAAA,OAAAH,EAAApB,MAAA,KAAAC,UAAA,I","sources":["pages/EditorsList/EditorsList.styled.jsx","pages/EditorsList/EditorsList.jsx","pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\n    \n`;\n\nexport const Item = styled.li`\n    \n`;\n\nexport const MovieLink = styled(Link)`\n    \n`;","import { useLocation } from \"react-router-dom\";\nimport { List, Item, MovieLink } from \"./EditorsList.styled\";\n\nexport default function EditorList ({ films }) {\n    const location = useLocation();\n\n    return (\n        <List>\n            {films.map(film => (\n                <Item eky={film.id}>\n                    <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n                        {film.title}\n                    </MovieLink>\n                </Item>\n            ))}\n        </List>\n    )\n};\n\n","import { useState } from \"react\";\nimport {Loader} from \"components/Loader/Loader\";\nimport EditorList from \"pages/EditorsList/EditorsList\";\nimport { Form } from \"react-router-dom\";\nimport { fetchSearchByKeyword } from \"services/Api\";\n\nexport const Movies = () => {\n    const [searchFilms, setSearchFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [noMoviesText, setNoMoviesText] = useState(false);\n\n    const searchMovies = queryMovie => {\n        setLoading(true);\n\n      fetchSearchByKeyword(queryMovie)\n        .then(searchResults => {\n          setSearchFilms(searchResults);\n            setNoMoviesText(searchResults.length === 0);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n    return (\n        <main>\n            <Form searchMovies={searchMovies} />\n            {loading && <Loader />}\n            {noMoviesText && (<p>There is no movies with this request. Please, try again</p>)}\n            {searchFilms && <EditorList films={searchFilms} />}\n        </main>\n    )\n}","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c8f39373aa3f9e58d9844c0d233508c8';\n\nexport const fetchTrending = async() => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}&language=en-US`);\n    return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","EditorList","_ref","films","location","useLocation","_jsx","children","map","film","eky","id","to","concat","state","from","title","Movies","_useState","useState","_useState2","_slicedToArray","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","_jsxs","Form","searchMovies","queryMovie","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","Loader","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
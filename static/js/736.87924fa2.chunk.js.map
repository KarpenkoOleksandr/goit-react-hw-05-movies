{"version":3,"file":"static/js/736.87924fa2.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 24px;    \n`\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px; \n  max-width: 200px;\n`","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchActors } from \"services/Api\";\nimport Loader from \"components/Loader/Loader\";\nimport { List, Text } from \"./Cast.styled\";\n\nexport default function Cast () {\n    const { movieId } = useParams();\n    const [actors, setActors] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n     useEffect(() => {\n      const onActorsOfMovie = async () => {\n       setLoading(true);\n        try {\n        const resp = await fetchActors(movieId);\n        setActors(resp);   \n        } catch (error) {\n        console.log(error);\n        } finally {\n        setLoading(false);\n        }\n        };\n        onActorsOfMovie();\n    }, [movieId]);\n\n    return (\n        <div>\n            {loading && <Loader />}\n            <List>\n                {actors.map(({ id, profile_path, original_name, name, character }) => (\n                    <li key={id}>\n                        <img width=\"200px\" src={profile_path\n                            ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                            : `https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700`} alt={original_name} />\n                        <Text>{name}</Text>\n                        <Text>Character: {character}</Text>\n                 </li>   \n                ))}\n            </List>\n        </div>\n    )\n}","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c8f39373aa3f9e58d9844c0d233508c8';\n\nexport const fetchTrending = async() => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}&language=en-US`);\n    return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoading","useEffect","onActorsOfMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","fetchActors","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","_ref2","id","profile_path","original_name","name","character","width","src","concat","alt","axios","API_KEY","fetchTrending","response","abrupt","data","results","fetchSearchByKeyword","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
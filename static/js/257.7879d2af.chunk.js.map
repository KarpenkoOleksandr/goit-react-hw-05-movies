{"version":3,"file":"static/js/257.7879d2af.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 24px;\n  gap: 24px; \n`;\n\n\nexport const List = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;  \n`;\n\n\nexport const ListInfo = styled.ul`\ndisplay: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;   \n`;\n\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 18px;\n  color: #191d1e;\n\n  &:hover {\n    color: teal;\n  }  \n`;\n\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 2px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 16px;\n  background-color: #fff;\n\n  &:hover {\n    color: #fff;\n    border: 2px solid teal;\n    background-color: teal;\n  }\n`;","import { useEffect, useState } from \"react\";\nimport { useParams, Outlet, Link, useLocation } from \"react-router-dom\";\nimport Loader from \"components/Loader/Loader\";\nimport { fetchMovieDetails } from \"services/Api\";\nimport { Container, List, ListInfo, LinkInfo, Button } from \"./MovieDetails.styled\";\n\nexport default function MovieDetails() {\n    const { movieId } = useParams();\n    const [movieInfo, setMovieInfo] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n\n    useEffect(() => {\n     const fetchMovieDetailsFilms = () => {\n      setLoading(true);\n\n      fetchMovieDetails(movieId)\n        .then(detailMovie => {\n          setMovieInfo(detailMovie);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchMovieDetailsFilms();\n    }, [movieId]);\n\n  if (!movieInfo) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo || {};    \n    \n    return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <Button type=\"button\">Go back</Button>\n      </Link>\n      {loading && <Loader />}\n\n      {movieInfo && (\n        <Container>\n          <img\n            width=\"300px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700`\n            }\n            alt={original_title}\n          />\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <List>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </List>\n          </div>\n        </Container>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ListInfo>\n          <li>\n            <LinkInfo to=\"cast\">Cast</LinkInfo>\n          </li>\n          <li>\n            <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n          </li>\n        </ListInfo>\n        <hr />\n        <Outlet />\n      </div>\n    </>        \n    )\n}","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c8f39373aa3f9e58d9844c0d233508c8';\n\nexport const fetchTrending = async() => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}&language=en-US`);\n    return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","ListInfo","_templateObject3","LinkInfo","Link","_templateObject4","Button","_templateObject5","MovieDetails","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","fetchMovieDetails","then","detailMovie","catch","error","console","log","finally","_ref","title","release_date","popularity","overview","genres","poster_path","original_title","_jsxs","_Fragment","children","_jsx","to","state","from","type","Loader","width","src","concat","alt","slice","map","genre","name","id","Outlet","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","_ref3","_callee3","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}